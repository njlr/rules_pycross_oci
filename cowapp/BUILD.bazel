load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@aspect_rules_py//py:defs.bzl", "py_binary")
load("@rules_pycross//pycross:defs.bzl", "pycross_poetry_lock_model", "pycross_lock_file")
load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:mappings.bzl", "strip_prefix")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

py_binary(
  name = "cowapp",
  main = "main.py",
  srcs = [
    "__init__.py",
    "main.py",
  ],
  deps = [
    "@poetry_lock_file//deps:cowsay",
    "@poetry_lock_file//deps:numpy",
  ],
)

pycross_poetry_lock_model(
  name = "poetry_lock_model",
  lock_file = ":poetry.lock",
  project_file = ":pyproject.toml",
)

pycross_lock_file(
  name = "poetry",
  out = "poetry_lock.bzl",
  lock_model_file = ":poetry_lock_model",
    target_environments = [
      "//:python_3_12_darwin_arm64",
      "//:python_3_12_linux_arm64",
  ],
)

write_source_files(
    name = "lock_file.update",
    files = {
        "poetry_lock.bzl": ":poetry_lock.bzl",
    },
)

pkg_tar(
  name = "cowapp_files",
  srcs = [
    ":cowapp",
  ],
  # strip_prefix = strip_prefix.from_pkg("."),
  include_runfiles = True,
)

oci_image(
  name = "image",
  base = "@ubuntu_24_04",
  cmd = "cmd.txt",
  tars = [
    ":cowapp_files",
  ],
)

platform_transition_filegroup(
  name = "image_linux_x86_64",
  srcs = [
    ":image",
  ],
  target_platform = "//:linux_x86_64",
)

platform_transition_filegroup(
  name = "image_linux_arm64",
  srcs = [
    ":image",
  ],
  target_platform = "//:linux_arm64",
)

oci_tarball(
  name = "tarball_linux_x86_64",
  image = ":image_linux_x86_64",
  repo_tags = [
    "bazel/cowapp_linux_x86_64:latest",
  ],
)

oci_tarball(
  name = "tarball_linux_arm64",
  image = ":image_linux_arm64",
  repo_tags = [
    "bazel/cowapp_linux_arm64:latest",
  ],
)
